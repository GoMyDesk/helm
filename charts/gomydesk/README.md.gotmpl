{{ template "chart.header" . }}
{{ template "chart.description" . }}

## Installation

```bash
$> helm repo add gomydesk https://gomydesk.github.io/helm-charts/charts
$> helm install gomydesk gomydesk/gomydesk
```

Once the app pod is running (this may take a minute) you can retrieve the initial admin password with:

```bash
$> kubectl get secret gomydesk-admin-secret -o go-template="{{ "{{" }} .data.password {{ "}}" }}" | base64 -d && echo
```

The app service by default is called `gomydesk-app` and you can retrieve the endpoint with `kubectl get svc gomydesk-app`.
If you'd like to use `port-forward` you can run:

```bash
$> kubectl port-forward svc/gomydesk-app 8443:443
```

Then visit https://localhost:8443 to use `gomydesk`.

If you'd like to see an example of the `helm` values for using vault as the secrets backend,
you can find documentation in the [examples](https://github.com/gomydesk/gomydesk/blob/main/deploy/examples/example-vault-helm-values.yaml) folder.
There are examples for LDAP and OIDC authentication in the same folder.

For an up-to-date and complete list of all available options see the [API Reference](https://github.com/gomydesk/gomydesk/blob/main/doc/appv1.md#VDIClusterSpec).

### Enabling Metrics

By default the `gomydesk-app` pods will provide prometheus metrics at `/api/metrics`. In addition to this,
you can configure the `gomydesk-manager` to manage the `prometheus-operator` resources required to scrape those metrics.

For the time being, the grafana implementation will only work if you let `gomydesk` also create the `Prometheus` CR.
Alternatively, you can let `gomydesk` create the `ServiceMonitor` with labels selected by your existing prometheus instances, and use
the [example dashboard](https://github.com/gomydesk/gomydesk/blob/main/deploy/examples/example-grafana-dashboard.json) as a starting point in grafana.

To enable the in-UI metrics you can do the following:

```bash
# The values in the hack/ directory will disable everything in the helm chart except the operator
helm install prometheus-operator stable/prometheus-operator -f hack/prom-operator-values.yaml

# Follow the instructions above to set up the gomydesk repo and then pass the metrics arguments:
helm install gomydesk gomydesk/gomydesk \
    --set vdi.spec.metrics.serviceMonitor.create=true \
    --set vdi.spec.metrics.prometheus.create=true \
    --set vdi.spec.metrics.grafana.enabled=true
```

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}
